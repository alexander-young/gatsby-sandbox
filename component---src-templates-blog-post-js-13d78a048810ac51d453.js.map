{"version":3,"sources":["webpack:///./src/components/RelatedPosts.js","webpack:///./src/components/Author.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/image.js","webpack:///./src/components/wysiwyg.js"],"names":["query","render","postsData","console","log","className","wordPress","posts","nodes","map","node","key","uri","src","featuredImage","sourceUrl","srcSet","alt","title","dangerouslySetInnerHTML","__html","excerpt","to","author","postAuthor","avatar","url","name","description","components","Image","settings","image","tag","TextEditor","editor","BlogPostTemplate","data","PageContent","elementorData","pageContext","modifiedData","row","id","elements","column","_column_size","widget","React","createElement","string","widgetType","replace","RegExp","$1","$2","$3","toUpperCase","toLowerCase","s","RelatedPosts","Author"],"mappings":"mKAEe,oBACb,kBAAC,IAAD,CACEA,MAAK,YAiBLC,OAAQ,SAAAC,GAEN,OADAC,QAAQC,IAAI,CAAEF,cAEZ,6BACE,6CACA,yBAAKG,UAAU,YAEXH,EAAUI,UAAUC,MAAMC,MAAMC,KAAI,SAAAC,GAClC,OACE,yBAAKL,UAAU,SAASM,IAAKD,EAAKE,KAChC,yBAAKP,UAAU,QACb,yBAAKQ,IAAKH,EAAKI,cAAcC,UAAWC,OAAQN,EAAKI,cAAcE,OAAQC,IAAI,GAAGZ,UAAU,iBAC5F,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcK,EAAKQ,OACjC,yBAAKb,UAAU,YAAYc,wBAAyB,CAAEC,OAAQV,EAAKW,WACnE,kBAAC,IAAD,CAAMhB,UAAU,kBAAkBiB,GAAIZ,EAAKE,KAA3C,sBAjCtB,UCFa,G,MAAA,SAACW,GACd,IAAIC,EAAaD,EAAOA,OACxB,OACE,yBAAKlB,UAAU,YACb,yBAAKA,UAAU,UACb,gDACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,yBAAKQ,IAAKW,EAAWC,OAAOC,IAAKT,IAAKO,EAAWG,QAEnD,yBAAKtB,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcmB,EAAWG,MACvC,uBAAGtB,UAAU,aAAamB,EAAWI,qBCN/CC,EAAa,CACjBC,MCRY,SAACC,GACb,OAAQ,yBAAKZ,wBAAyB,CAAEC,OAAQW,EAASC,MAAMC,QDQ/DC,WETc,SAACH,GACf,OAAQ,yBAAKZ,wBAAyB,CAAEC,OAAQW,EAASI,YFwE5CC,UAjDU,SAACC,GAEtBlC,QAAQC,IAAI,CAAEiC,SAEd,IACIC,EADEC,EAAgBF,EAAKG,YAAYC,aAiCvC,OA5BEH,EAHGC,EAGWA,EAAc9B,KAAI,SAAAiC,GAC9B,OACE,yBAAK/B,IAAK+B,EAAIC,GAAItC,UAAU,YAExBqC,EAAIE,SAASnC,KAAI,SAAAoC,GACf,OACE,yBAAKlC,IAAKkC,EAAOF,GAAItC,UAAS,WAAawC,EAAOd,SAASe,cAEvDD,EAAOD,SAASnC,KAAI,SAAAsC,GAClB,OACEC,IAAMC,cACJpB,GAhCNqB,EAgC8BH,EAAOI,YA/BlD,GAAGD,GACPE,QAAQ,IAAIC,OAAO,QAAS,KAAM,KAClCD,QAAQ,IAAIC,OAAO,UAAW,KAAM,IACpCD,QACC,IAAIC,OAAO,cAAe,MAC1B,SAACC,EAAIC,EAAIC,GAAT,UAAmBD,EAAGE,cAAgBD,EAAGE,kBAE1CN,QAAQ,IAAIC,OAAO,KAAM,KAAM,IAC/BD,QAAQ,IAAIC,OAAO,OAAO,SAAAM,GAAC,OAAIA,EAAEF,mBAsBZ,iBAGOV,EAAOhB,SAHd,CAIIpB,IAAKoC,EAAOJ,MAnC1C,IAAsBO,aAmBF,UA+Bd,kBAAC,IAAD,KACE,6BACGZ,EACA,kBAACsB,EAAD,MACA,kBAACC,EAAD,CAAQtC,OAAQc,EAAKG,YAAYjB,a","file":"component---src-templates-blog-post-js-13d78a048810ac51d453.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query RelatedPostsQuery {\n        wordPress {\n          posts(first: 3) {\n            nodes {\n              title\n              uri\n              excerpt\n              featuredImage {\n                sourceUrl(size: MEDIUM)\n                srcSet(size: MEDIUM)\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={postsData => {\n      console.log({ postsData })\n      return (\n        <div>\n          <h2>Related Posts</h2>\n          <div className=\"row mb-5\">\n            {\n              postsData.wordPress.posts.nodes.map(node => {\n                return (\n                  <div className=\"col-sm\" key={node.uri}>\n                    <div className=\"card\">\n                      <img src={node.featuredImage.sourceUrl} srcSet={node.featuredImage.srcSet} alt=\"\" className=\"card-img-top\" />\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">{node.title}</h5>\n                        <div className=\"card-text\" dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                        <Link className=\"btn btn-primary\" to={node.uri}>Read More</Link>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n      )\n    }}\n  />\n)","import React from \"react\"\nexport default (author) => {\n  let postAuthor = author.author;\n  return (\n    <div className=\"row mb-5\">\n      <div className=\"col-sm\">\n        <h2>About The Author</h2>\n        <div className=\"card\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-md-3\">\n              <img src={postAuthor.avatar.url} alt={postAuthor.name} />\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{postAuthor.name}</h5>\n                <p className=\"card-text\">{postAuthor.description}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport RelatedPosts from \"../components/RelatedPosts\"\nimport Author from \"../components/Author\"\n\nimport Image from \"../components/image\"\nimport WYSIWYG from \"../components/wysiwyg\"\n\nconst components = {\n  Image: Image,\n  TextEditor: WYSIWYG,\n}\n\nfunction toPascalCase(string) {\n  return `${string}`\n    .replace(new RegExp(/[-_]+/, 'g'), ' ')\n    .replace(new RegExp(/[^\\w\\s]/, 'g'), '')\n    .replace(\n      new RegExp(/\\s+(.)(\\w+)/, 'g'),\n      ($1, $2, $3) => `${$2.toUpperCase() + $3.toLowerCase()}`\n    )\n    .replace(new RegExp(/\\s/, 'g'), '')\n    .replace(new RegExp(/\\w/), s => s.toUpperCase());\n}\n\nconst BlogPostTemplate = (data) => {\n  {\n    console.log({ data });\n\n    const elementorData = data.pageContext.modifiedData;\n    let PageContent;\n    if (!elementorData) {\n      PageContent = 'no data';\n    } else {\n      PageContent = elementorData.map(row => {\n        return (\n          <div key={row.id} className=\"row mb-5\">\n            {\n              row.elements.map(column => {\n                return (\n                  <div key={column.id} className={`col col-${column.settings._column_size}`}>\n                    {\n                      column.elements.map(widget => {\n                        return (\n                          React.createElement(\n                            components[toPascalCase(widget.widgetType)],\n                            {\n                              ...widget.settings,\n                              key: widget.id\n                            }\n                          )\n                        )\n                      })\n                    }\n                  </div>\n                )\n              })\n            }\n          </div>\n        )\n      })\n    }\n    return (\n      <Layout>\n        <div>\n          {PageContent}\n          {<RelatedPosts />}\n          {<Author author={data.pageContext.author} />}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate","import React from \"react\"\n\nconst Image = (settings) => {\n  return (<div dangerouslySetInnerHTML={{ __html: settings.image.tag }} />)\n};\nexport default Image;","import React from \"react\"\n\nconst WYSIWYG = (settings) => {\n  return (<div dangerouslySetInnerHTML={{ __html: settings.editor }} />)\n};\nexport default WYSIWYG;"],"sourceRoot":""}